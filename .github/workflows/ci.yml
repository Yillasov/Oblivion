name: Super-Linter

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  super-lint:
    name: Lint code base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files
          fetch-depth: 0

      - name: Cache linter results
        uses: actions/cache@v3
        with:
          path: .cache/
          key: ${{ runner.os }}-linter-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-linter-

      - name: Run Super-Linter
        uses: github/super-linter@v4
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Only scan changed files in PRs to speed up linting
          VALIDATE_ALL_CODEBASE: ${{ github.event_name != 'pull_request' }}
          # Enable file filtering
          FILTER_REGEX_INCLUDE: .*src/.*
          # Increase timeout for large files
          LINTER_TIMEOUT: 600
          # Enable caching
          USE_FIND_ALGORITHM: true
          # Parallel execution
          ACTIONS_RUNNER_DEBUG: true
          
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov
          
      - name: Run tests
        run: |
          pytest tests/unit -v --cov=src